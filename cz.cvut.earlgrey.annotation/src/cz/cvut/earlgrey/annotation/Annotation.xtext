grammar cz.cvut.earlgrey.annotation.Annotation hidden(WS, ML_COMMENT, SL_COMMENT)

generate annotation "http://www.cvut.cz/earlgrey/annotation/Annotation"
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

// e.g.: @Generate(Java)
Annotation:
    '@' name=ExtendedID
    (=> '('
        parameter+=Parameter (',' parameter+=Parameter)*
    ')')?
;

Parameter:
    AssignParameter
    | ValueParameter
;

// e.g.: @Generate(language = Java)
AssignParameter returns Parameter:
    name=ExtendedID '=' value=Value
;

// e.g.: @Generate(Java)
ValueParameter returns Parameter:
    value=Value
;

// e.g.: null
Value returns ecore::EString:
    Integer
    | STRING
    | ExtendedID
    | BOOLEAN
    | NULL
    | Real
;

ExtendedID:
    ID ('.' ID)*
;

// e.g.: Extended Value with whitespace support. In order to make
// this rule works, use hidden() as in following example:
// Guard hidden(): 'if ' expr=Expression ' then';   
ValueWithSpaces hidden():
    (Value | ANY_OTHER | WS)*
;

CompositeID returns ecore::EString:
    ExtendedID | STRING
;

Real returns ecore::EDouble:
    '-'? NATURAL '.' NATURAL (("e"|"E")("+"|"-") NATURAL)?
;

Integer returns ecore::EInt:
    '-'? NATURAL
;

// FIXME: http://en.wikipedia.org/wiki/Operators_in_C_and_C%2B%2B
terminal OPERATOR:
    '++' | '--' | '==' | '>=' | '<=' | '!=' | '<>' | '||' | '&&' | '-=' | '+='
    | '=' | '>>' | '<<' | '|='
;

terminal BOOLEAN:
    'true' | 'false'
;

terminal NULL:
    'null' | 'nil' | 'NULL'
;

terminal ID:
    ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*
;

terminal NATURAL returns ecore::EInt:
    ('0'..'9')+
;

terminal STRING: 
    '"' ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|'"') )* '"'
    | "'" ( '\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\') | !('\\'|"'") )* "'"
; 

terminal ML_COMMENT:
    '/*' -> '*/'
;

terminal SL_COMMENT:
    '//' !('\n'|'\r')* ('\r'? '\n')?
;

terminal WS:
    (' '|'\t'|'\r'|'\n')+
;

terminal ANY_OTHER:
    .
;