/*
* generated by Xtext
*/
grammar InternalClassmodel;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package cz.cvut.earlgrey.classmodel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package cz.cvut.earlgrey.classmodel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import cz.cvut.earlgrey.classmodel.services.ClassmodelGrammarAccess;

}

@parser::members {
 
 	private ClassmodelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ClassmodelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleClassmodel
entryRuleClassmodel 
:
{ before(grammarAccess.getClassmodelRule()); }
	 ruleClassmodel
{ after(grammarAccess.getClassmodelRule()); } 
	 EOF 
;

// Rule Classmodel
ruleClassmodel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassmodelAccess().getGroup()); }
(rule__Classmodel__Group__0)
{ after(grammarAccess.getClassmodelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbstractElement
entryRuleAbstractElement 
:
{ before(grammarAccess.getAbstractElementRule()); }
	 ruleAbstractElement
{ after(grammarAccess.getAbstractElementRule()); } 
	 EOF 
;

// Rule AbstractElement
ruleAbstractElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbstractElementAccess().getAlternatives()); }
(rule__AbstractElement__Alternatives)
{ after(grammarAccess.getAbstractElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getAlternatives()); }
(rule__Entity__Alternatives)
{ after(grammarAccess.getEntityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClass
entryRuleClass 
:
{ before(grammarAccess.getClassRule()); }
	 ruleClass
{ after(grammarAccess.getClassRule()); } 
	 EOF 
;

// Rule Class
ruleClass
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClassAccess().getGroup()); }
(rule__Class__Group__0)
{ after(grammarAccess.getClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumConstant
entryRuleEnumConstant 
:
{ before(grammarAccess.getEnumConstantRule()); }
	 ruleEnumConstant
{ after(grammarAccess.getEnumConstantRule()); } 
	 EOF 
;

// Rule EnumConstant
ruleEnumConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumConstantAccess().getGroup()); }
(rule__EnumConstant__Group__0)
{ after(grammarAccess.getEnumConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getGroup()); }
(rule__Reference__Group__0)
{ after(grammarAccess.getReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getGroup()); }
(rule__Operation__Group__0)
{ after(grammarAccess.getOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAttribute
entryRuleAttribute 
:
{ before(grammarAccess.getAttributeRule()); }
	 ruleAttribute
{ after(grammarAccess.getAttributeRule()); } 
	 EOF 
;

// Rule Attribute
ruleAttribute
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAttributeAccess().getGroup()); }
(rule__Attribute__Group__0)
{ after(grammarAccess.getAttributeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getINTTerminalRuleCall()); }
	RULE_INT
{ after(grammarAccess.getIntValueAccess().getINTTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelation
entryRuleRelation 
:
{ before(grammarAccess.getRelationRule()); }
	 ruleRelation
{ after(grammarAccess.getRelationRule()); } 
	 EOF 
;

// Rule Relation
ruleRelation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationAccess().getGroup()); }
(rule__Relation__Group__0)
{ after(grammarAccess.getRelationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule RelationType
ruleRelationType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Visibility
ruleVisibility
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getAlternatives()); }
(rule__Visibility__Alternatives)
{ after(grammarAccess.getVisibilityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__AbstractElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbstractElementAccess().getPackageParserRuleCall_0()); }
	rulePackage
{ after(grammarAccess.getAbstractElementAccess().getPackageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getEntityParserRuleCall_1()); }
	ruleEntity
{ after(grammarAccess.getAbstractElementAccess().getEntityParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAbstractElementAccess().getRelationParserRuleCall_2()); }
	ruleRelation
{ after(grammarAccess.getAbstractElementAccess().getRelationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getClassParserRuleCall_0()); }
(	ruleClass)
{ after(grammarAccess.getEntityAccess().getClassParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEntityAccess().getEnumParserRuleCall_1()); }
	ruleEnum
{ after(grammarAccess.getEntityAccess().getEnumParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassAssignment_0_0_0()); }
(rule__Class__ClassAssignment_0_0_0)
{ after(grammarAccess.getClassAccess().getClassAssignment_0_0_0()); }
)

    |(
{ before(grammarAccess.getClassAccess().getInterfaceAssignment_0_0_1()); }
(rule__Class__InterfaceAssignment_0_0_1)
{ after(grammarAccess.getClassAccess().getInterfaceAssignment_0_0_1()); }
)

    |(
{ before(grammarAccess.getClassAccess().getAbstractAssignment_0_0_2()); }
(rule__Class__AbstractAssignment_0_0_2)
{ after(grammarAccess.getClassAccess().getAbstractAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0()); }
	ruleAttribute
{ after(grammarAccess.getFeatureAccess().getAttributeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getOperationParserRuleCall_1()); }
	ruleOperation
{ after(grammarAccess.getFeatureAccess().getOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getNullKeyword_0()); }

	'null' 

{ after(grammarAccess.getValueAccess().getNullKeyword_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIntValueParserRuleCall_2()); }
	ruleIntValue
{ after(grammarAccess.getValueAccess().getIntValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getASSOCIATIONEnumLiteralDeclaration_0()); }
(	'associates' 
)
{ after(grammarAccess.getRelationTypeAccess().getASSOCIATIONEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getDEPENCYEnumLiteralDeclaration_1()); }
(	'depends' 
)
{ after(grammarAccess.getRelationTypeAccess().getDEPENCYEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getGENERALIZATIONEnumLiteralDeclaration_2()); }
(	'extends' 
)
{ after(grammarAccess.getRelationTypeAccess().getGENERALIZATIONEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getREALIZATIONEnumLiteralDeclaration_3()); }
(	'implements' 
)
{ after(grammarAccess.getRelationTypeAccess().getREALIZATIONEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getAGGREGATIONEnumLiteralDeclaration_4()); }
(	'aggregates' 
)
{ after(grammarAccess.getRelationTypeAccess().getAGGREGATIONEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getCOMPOSITIONEnumLiteralDeclaration_5()); }
(	'composedOf' 
)
{ after(grammarAccess.getRelationTypeAccess().getCOMPOSITIONEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Visibility__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getVisibilityAccess().getPUBLICEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getVisibilityAccess().getPRIVATEEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
(	'#' 
)
{ after(grammarAccess.getVisibilityAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getVisibilityAccess().getPACKAGE_PRIVATEEnumLiteralDeclaration_3()); }
(	'~' 
)
{ after(grammarAccess.getVisibilityAccess().getPACKAGE_PRIVATEEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Classmodel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Classmodel__Group__0__Impl
	rule__Classmodel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Classmodel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassmodelAccess().getImportsAssignment_0()); }
(rule__Classmodel__ImportsAssignment_0)*
{ after(grammarAccess.getClassmodelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Classmodel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Classmodel__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Classmodel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassmodelAccess().getElementsAssignment_1()); }
(rule__Classmodel__ElementsAssignment_1)*
{ after(grammarAccess.getClassmodelAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_1()); }
(rule__Package__NameAssignment_1)
{ after(grammarAccess.getPackageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
	rule__Package__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getPackageAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__3__Impl
	rule__Package__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getElementsAssignment_3()); }
(rule__Package__ElementsAssignment_3)*
{ after(grammarAccess.getPackageAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getPackageAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Class__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__0__Impl
	rule__Class__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getGroup_0()); }
(rule__Class__Group_0__0)
{ after(grammarAccess.getClassAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__1__Impl
	rule__Class__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameAssignment_1()); }
(rule__Class__NameAssignment_1)
{ after(grammarAccess.getClassAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__2__Impl
	rule__Class__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getClassAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__3__Impl
	rule__Class__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getFeatureAssignment_3()); }
(rule__Class__FeatureAssignment_3)*
{ after(grammarAccess.getClassAccess().getFeatureAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Class__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getClassAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Class__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Class__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Class__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAlternatives_0_0()); }
(rule__Class__Alternatives_0_0)
{ after(grammarAccess.getClassAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumerationAssignment_0()); }
(rule__Enum__EnumerationAssignment_0)
{ after(grammarAccess.getEnumAccess().getEnumerationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameAssignment_1()); }
(rule__Enum__NameAssignment_1)
{ after(grammarAccess.getEnumAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getFeatureAssignment_3()); }
(rule__Enum__FeatureAssignment_3)*
{ after(grammarAccess.getEnumAccess().getFeatureAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumConstant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group__0__Impl
	rule__EnumConstant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getNameAssignment_0()); }
(rule__EnumConstant__NameAssignment_0)
{ after(grammarAccess.getEnumConstantAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getGroup_1()); }
(rule__EnumConstant__Group_1__0)?
{ after(grammarAccess.getEnumConstantAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumConstant__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1__0__Impl
	rule__EnumConstant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getEqualsSignKeyword_1_0()); }
(
	'=' 
)
{ after(grammarAccess.getEnumConstantAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumConstant__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumConstant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getImplicitAssignment_1_1()); }
(rule__EnumConstant__ImplicitAssignment_1_1)
{ after(grammarAccess.getEnumConstantAccess().getImplicitAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getTypeAssignment_0()); }
(rule__Reference__TypeAssignment_0)
{ after(grammarAccess.getReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getArrayAssignment_1()); }
(rule__Reference__ArrayAssignment_1)*
{ after(grammarAccess.getReferenceAccess().getArrayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAction_0()); }
(

)
{ after(grammarAccess.getArrayAccess().getArrayAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getSizeAssignment_2()); }
(rule__Array__SizeAssignment_2)?
{ after(grammarAccess.getArrayAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Operation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__0__Impl
	rule__Operation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getUnorderedGroup_0()); }
(rule__Operation__UnorderedGroup_0)
{ after(grammarAccess.getOperationAccess().getUnorderedGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__1__Impl
	rule__Operation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameAssignment_1()); }
(rule__Operation__NameAssignment_1)
{ after(grammarAccess.getOperationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__2__Impl
	rule__Operation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getOperationAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__3__Impl
	rule__Operation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3()); }
(rule__Operation__Group_3__0)?
{ after(grammarAccess.getOperationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__4__Impl
	rule__Operation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getOperationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__5__Impl
	rule__Operation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getColonKeyword_5()); }

	':' 

{ after(grammarAccess.getOperationAccess().getColonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnAssignment_6()); }
(rule__Operation__ReturnAssignment_6)
{ after(grammarAccess.getOperationAccess().getReturnAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Operation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__0__Impl
	rule__Operation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersAssignment_3_0()); }
(rule__Operation__ParametersAssignment_3_0)
{ after(grammarAccess.getOperationAccess().getParametersAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getGroup_3_1()); }
(rule__Operation__Group_3_1__0)*
{ after(grammarAccess.getOperationAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Operation__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3_1__0__Impl
	rule__Operation__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getOperationAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersAssignment_3_1_1()); }
(rule__Operation__ParametersAssignment_3_1_1)
{ after(grammarAccess.getOperationAccess().getParametersAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
(rule__Parameter__NameAssignment_0)
{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getParameterAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
(rule__Parameter__TypeAssignment_2)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_3()); }
(rule__Parameter__Group_3__0)?
{ after(grammarAccess.getParameterAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parameter__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3__0__Impl
	rule__Parameter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getEqualsSignKeyword_3_0()); }
(
	'=' 
)
{ after(grammarAccess.getParameterAccess().getEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3__1__Impl
	rule__Parameter__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getImplicitAssignment_3_1()); }
(rule__Parameter__ImplicitAssignment_3_1)
{ after(grammarAccess.getParameterAccess().getImplicitAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_3_2()); }
(rule__Parameter__Group_3_2__0)*
{ after(grammarAccess.getParameterAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3_2__0__Impl
	rule__Parameter__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getParameterAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getImplicitAssignment_3_2_1()); }
(rule__Parameter__ImplicitAssignment_3_2_1)
{ after(grammarAccess.getParameterAccess().getImplicitAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__0__Impl
	rule__Attribute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getUnorderedGroup_0()); }
(rule__Attribute__UnorderedGroup_0)
{ after(grammarAccess.getAttributeAccess().getUnorderedGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__1__Impl
	rule__Attribute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
(rule__Attribute__NameAssignment_1)
{ after(grammarAccess.getAttributeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__2__Impl
	rule__Attribute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getAttributeAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__3__Impl
	rule__Attribute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
(rule__Attribute__TypeAssignment_3)
{ after(grammarAccess.getAttributeAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_4()); }
(rule__Attribute__Group_4__0)?
{ after(grammarAccess.getAttributeAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Attribute__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__0__Impl
	rule__Attribute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getEqualsSignKeyword_4_0()); }
(
	'=' 
)
{ after(grammarAccess.getAttributeAccess().getEqualsSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__1__Impl
	rule__Attribute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getImplicitAssignment_4_1()); }
(rule__Attribute__ImplicitAssignment_4_1)
{ after(grammarAccess.getAttributeAccess().getImplicitAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getGroup_4_2()); }
(rule__Attribute__Group_4_2__0)*
{ after(grammarAccess.getAttributeAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Attribute__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4_2__0__Impl
	rule__Attribute__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getAttributeAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getImplicitAssignment_4_2_1()); }
(rule__Attribute__ImplicitAssignment_4_2_1)
{ after(grammarAccess.getAttributeAccess().getImplicitAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Relation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__0__Impl
	rule__Relation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOriginAssignment_0()); }
(rule__Relation__OriginAssignment_0)
{ after(grammarAccess.getRelationAccess().getOriginAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__1__Impl
	rule__Relation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getCardinalityFromAssignment_1()); }
(rule__Relation__CardinalityFromAssignment_1)?
{ after(grammarAccess.getRelationAccess().getCardinalityFromAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__2__Impl
	rule__Relation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getTypeAssignment_2()); }
(rule__Relation__TypeAssignment_2)
{ after(grammarAccess.getRelationAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__3__Impl
	rule__Relation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getCardinalityToAssignment_3()); }
(rule__Relation__CardinalityToAssignment_3)?
{ after(grammarAccess.getRelationAccess().getCardinalityToAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__4__Impl
	rule__Relation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getDestinationAssignment_4()); }
(rule__Relation__DestinationAssignment_4)
{ after(grammarAccess.getRelationAccess().getDestinationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getGroup_5()); }
(rule__Relation__Group_5__0)?
{ after(grammarAccess.getRelationAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Relation__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_5__0__Impl
	rule__Relation__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getColonKeyword_5_0()); }

	':' 

{ after(grammarAccess.getRelationAccess().getColonKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Relation__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Relation__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLabelAssignment_5_1()); }
(rule__Relation__LabelAssignment_5_1)
{ after(grammarAccess.getRelationAccess().getLabelAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Operation__UnorderedGroup_0
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getOperationAccess().getUnorderedGroup_0());
    }
:
	rule__Operation__UnorderedGroup_0__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getOperationAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}


rule__Operation__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOperationAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOperationAccess().getUnorderedGroup_0(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOperationAccess().getModifierAssignment_0_0()); }
						(rule__Operation__ModifierAssignment_0_0)
						{ after(grammarAccess.getOperationAccess().getModifierAssignment_0_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getOperationAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getOperationAccess().getUnorderedGroup_0(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getOperationAccess().getStaticAssignment_0_1()); }
						(rule__Operation__StaticAssignment_0_1)
						{ after(grammarAccess.getOperationAccess().getStaticAssignment_0_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getOperationAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}


rule__Operation__UnorderedGroup_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__UnorderedGroup_0__Impl
	rule__Operation__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Operation__UnorderedGroup_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Operation__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Attribute__UnorderedGroup_0
    @init {
    	int stackSize = keepStackSize();
		getUnorderedGroupHelper().enter(grammarAccess.getAttributeAccess().getUnorderedGroup_0());
    }
:
	rule__Attribute__UnorderedGroup_0__0
	?
	
;
finally {
	getUnorderedGroupHelper().leave(grammarAccess.getAttributeAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}


rule__Attribute__UnorderedGroup_0__Impl
	@init {
		int stackSize = keepStackSize();
		boolean selected = false;
    }
:
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAttributeAccess().getUnorderedGroup_0(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAttributeAccess().getUnorderedGroup_0(), 0);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getAttributeAccess().getModifierAssignment_0_0()); }
						(rule__Attribute__ModifierAssignment_0_0)
						{ after(grammarAccess.getAttributeAccess().getModifierAssignment_0_0()); }
					)
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getAttributeAccess().getUnorderedGroup_0(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getAttributeAccess().getUnorderedGroup_0(), 1);
	 				}
	 				{
	 				  selected = true;
	 				}
					(
					
						{ before(grammarAccess.getAttributeAccess().getStaticAssignment_0_1()); }
						(rule__Attribute__StaticAssignment_0_1)
						{ after(grammarAccess.getAttributeAccess().getStaticAssignment_0_1()); }
					)
 				)
			)  

		)
;
finally {
	if (selected)
		getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAttributeAccess().getUnorderedGroup_0());
	restoreStackSize(stackSize);
}


rule__Attribute__UnorderedGroup_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__UnorderedGroup_0__Impl
	rule__Attribute__UnorderedGroup_0__1?
;
finally {
	restoreStackSize(stackSize);
}


rule__Attribute__UnorderedGroup_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Attribute__UnorderedGroup_0__Impl
;
finally {
	restoreStackSize(stackSize);
}






rule__Classmodel__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassmodelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getClassmodelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Classmodel__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassmodelAccess().getElementsAbstractElementParserRuleCall_1_0()); }
	ruleAbstractElement{ after(grammarAccess.getClassmodelAccess().getElementsAbstractElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getPackageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getElementsAbstractElementParserRuleCall_3_0()); }
	ruleAbstractElement{ after(grammarAccess.getPackageAccess().getElementsAbstractElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__ClassAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getClassClassKeyword_0_0_0_0()); }
(
{ before(grammarAccess.getClassAccess().getClassClassKeyword_0_0_0_0()); }

	'class' 

{ after(grammarAccess.getClassAccess().getClassClassKeyword_0_0_0_0()); }
)

{ after(grammarAccess.getClassAccess().getClassClassKeyword_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__InterfaceAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getInterfaceInterfaceKeyword_0_0_1_0()); }
(
{ before(grammarAccess.getClassAccess().getInterfaceInterfaceKeyword_0_0_1_0()); }

	'interface' 

{ after(grammarAccess.getClassAccess().getInterfaceInterfaceKeyword_0_0_1_0()); }
)

{ after(grammarAccess.getClassAccess().getInterfaceInterfaceKeyword_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__AbstractAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getAbstractAbstractKeyword_0_0_2_0()); }
(
{ before(grammarAccess.getClassAccess().getAbstractAbstractKeyword_0_0_2_0()); }

	'abstract' 

{ after(grammarAccess.getClassAccess().getAbstractAbstractKeyword_0_0_2_0()); }
)

{ after(grammarAccess.getClassAccess().getAbstractAbstractKeyword_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getClassAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Class__FeatureAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassAccess().getFeatureFeatureParserRuleCall_3_0()); }
	ruleFeature{ after(grammarAccess.getClassAccess().getFeatureFeatureParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__EnumerationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumerationEnumKeyword_0_0()); }
(
{ before(grammarAccess.getEnumAccess().getEnumerationEnumKeyword_0_0()); }

	'enum' 

{ after(grammarAccess.getEnumAccess().getEnumerationEnumKeyword_0_0()); }
)

{ after(grammarAccess.getEnumAccess().getEnumerationEnumKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__FeatureAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getFeatureEnumConstantParserRuleCall_3_0()); }
	ruleEnumConstant{ after(grammarAccess.getEnumAccess().getFeatureEnumConstantParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEnumConstantAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumConstant__ImplicitAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumConstantAccess().getImplicitIntValueParserRuleCall_1_1_0()); }
	ruleIntValue{ after(grammarAccess.getEnumConstantAccess().getImplicitIntValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getTypeEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getReferenceAccess().getTypeEntityQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getReferenceAccess().getTypeEntityQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getTypeEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__ArrayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getArrayArrayParserRuleCall_1_0()); }
	ruleArray{ after(grammarAccess.getReferenceAccess().getArrayArrayParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getSizeINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getArrayAccess().getSizeINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ModifierAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getModifierVisibilityEnumRuleCall_0_0_0()); }
	ruleVisibility{ after(grammarAccess.getOperationAccess().getModifierVisibilityEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__StaticAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getStaticStaticKeyword_0_1_0()); }
(
{ before(grammarAccess.getOperationAccess().getStaticStaticKeyword_0_1_0()); }

	'static' 

{ after(grammarAccess.getOperationAccess().getStaticStaticKeyword_0_1_0()); }
)

{ after(grammarAccess.getOperationAccess().getStaticStaticKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getOperationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_3_0_0()); }
	ruleParameter{ after(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ParametersAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_3_1_1_0()); }
	ruleParameter{ after(grammarAccess.getOperationAccess().getParametersParameterParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__ReturnAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getReturnReferenceParserRuleCall_6_0()); }
	ruleReference{ after(grammarAccess.getOperationAccess().getReturnReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeReferenceParserRuleCall_2_0()); }
	ruleReference{ after(grammarAccess.getParameterAccess().getTypeReferenceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ImplicitAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getImplicitValueParserRuleCall_3_1_0()); }
	ruleValue{ after(grammarAccess.getParameterAccess().getImplicitValueParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ImplicitAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getImplicitValueParserRuleCall_3_2_1_0()); }
	ruleValue{ after(grammarAccess.getParameterAccess().getImplicitValueParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ModifierAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getModifierVisibilityEnumRuleCall_0_0_0()); }
	ruleVisibility{ after(grammarAccess.getAttributeAccess().getModifierVisibilityEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__StaticAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getStaticStaticKeyword_0_1_0()); }
(
{ before(grammarAccess.getAttributeAccess().getStaticStaticKeyword_0_1_0()); }

	'static' 

{ after(grammarAccess.getAttributeAccess().getStaticStaticKeyword_0_1_0()); }
)

{ after(grammarAccess.getAttributeAccess().getStaticStaticKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getAttributeAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getTypeReferenceParserRuleCall_3_0()); }
	ruleReference{ after(grammarAccess.getAttributeAccess().getTypeReferenceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ImplicitAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getImplicitValueParserRuleCall_4_1_0()); }
	ruleValue{ after(grammarAccess.getAttributeAccess().getImplicitValueParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Attribute__ImplicitAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAttributeAccess().getImplicitValueParserRuleCall_4_2_1_0()); }
	ruleValue{ after(grammarAccess.getAttributeAccess().getImplicitValueParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__OriginAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getOriginEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationAccess().getOriginEntityQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getOriginEntityQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getOriginEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__CardinalityFromAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getCardinalityFromSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getRelationAccess().getCardinalityFromSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getTypeRelationTypeEnumRuleCall_2_0()); }
	ruleRelationType{ after(grammarAccess.getRelationAccess().getTypeRelationTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__CardinalityToAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getCardinalityToSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getRelationAccess().getCardinalityToSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__DestinationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getDestinationEntityCrossReference_4_0()); }
(
{ before(grammarAccess.getRelationAccess().getDestinationEntityQualifiedNameParserRuleCall_4_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getRelationAccess().getDestinationEntityQualifiedNameParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getRelationAccess().getDestinationEntityCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Relation__LabelAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getRelationAccess().getLabelSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


