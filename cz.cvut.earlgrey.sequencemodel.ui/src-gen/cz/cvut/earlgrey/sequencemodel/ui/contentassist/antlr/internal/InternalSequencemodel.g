/*
* generated by Xtext
*/
grammar InternalSequencemodel;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package cz.cvut.earlgrey.sequencemodel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package cz.cvut.earlgrey.sequencemodel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import cz.cvut.earlgrey.sequencemodel.services.SequencemodelGrammarAccess;

}

@parser::members {
 
 	private SequencemodelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SequencemodelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequence
entryRuleSequence 
:
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceAccess().getGroup()); }
(rule__Sequence__Group__0)
{ after(grammarAccess.getSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipant
entryRuleParticipant 
:
{ before(grammarAccess.getParticipantRule()); }
	 ruleParticipant
{ after(grammarAccess.getParticipantRule()); } 
	 EOF 
;

// Rule Participant
ruleParticipant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantAccess().getGroup()); }
(rule__Participant__Group__0)
{ after(grammarAccess.getParticipantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives()); }
(rule__Transition__Alternatives)
{ after(grammarAccess.getTransitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFragment
entryRuleFragment 
:
{ before(grammarAccess.getFragmentRule()); }
	 ruleFragment
{ after(grammarAccess.getFragmentRule()); } 
	 EOF 
;

// Rule Fragment
ruleFragment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFragmentAccess().getAlternatives()); }
(rule__Fragment__Alternatives)
{ after(grammarAccess.getFragmentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfElseFragment
entryRuleIfElseFragment 
:
{ before(grammarAccess.getIfElseFragmentRule()); }
	 ruleIfElseFragment
{ after(grammarAccess.getIfElseFragmentRule()); } 
	 EOF 
;

// Rule IfElseFragment
ruleIfElseFragment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfElseFragmentAccess().getGroup()); }
(rule__IfElseFragment__Group__0)
{ after(grammarAccess.getIfElseFragmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeachFragment
entryRuleForeachFragment 
:
{ before(grammarAccess.getForeachFragmentRule()); }
	 ruleForeachFragment
{ after(grammarAccess.getForeachFragmentRule()); } 
	 EOF 
;

// Rule ForeachFragment
ruleForeachFragment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeachFragmentAccess().getGroup()); }
(rule__ForeachFragment__Group__0)
{ after(grammarAccess.getForeachFragmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopFragment
entryRuleLoopFragment 
:
{ before(grammarAccess.getLoopFragmentRule()); }
	 ruleLoopFragment
{ after(grammarAccess.getLoopFragmentRule()); } 
	 EOF 
;

// Rule LoopFragment
ruleLoopFragment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopFragmentAccess().getGroup()); }
(rule__LoopFragment__Group__0)
{ after(grammarAccess.getLoopFragmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssertFragment
entryRuleAssertFragment 
:
{ before(grammarAccess.getAssertFragmentRule()); }
	 ruleAssertFragment
{ after(grammarAccess.getAssertFragmentRule()); } 
	 EOF 
;

// Rule AssertFragment
ruleAssertFragment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssertFragmentAccess().getGroup()); }
(rule__AssertFragment__Group__0)
{ after(grammarAccess.getAssertFragmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBreakFragment
entryRuleBreakFragment 
:
{ before(grammarAccess.getBreakFragmentRule()); }
	 ruleBreakFragment
{ after(grammarAccess.getBreakFragmentRule()); } 
	 EOF 
;

// Rule BreakFragment
ruleBreakFragment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBreakFragmentAccess().getGroup()); }
(rule__BreakFragment__Group__0)
{ after(grammarAccess.getBreakFragmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNextFragment
entryRuleNextFragment 
:
{ before(grammarAccess.getNextFragmentRule()); }
	 ruleNextFragment
{ after(grammarAccess.getNextFragmentRule()); } 
	 EOF 
;

// Rule NextFragment
ruleNextFragment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNextFragmentAccess().getGroup()); }
(rule__NextFragment__Group__0)
{ after(grammarAccess.getNextFragmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getAlternatives()); }
(rule__Message__Alternatives)
{ after(grammarAccess.getMessageAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFoundMessage
entryRuleFoundMessage 
:
{ before(grammarAccess.getFoundMessageRule()); }
	 ruleFoundMessage
{ after(grammarAccess.getFoundMessageRule()); } 
	 EOF 
;

// Rule FoundMessage
ruleFoundMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFoundMessageAccess().getGroup()); }
(rule__FoundMessage__Group__0)
{ after(grammarAccess.getFoundMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallMessage
entryRuleCallMessage 
:
{ before(grammarAccess.getCallMessageRule()); }
	 ruleCallMessage
{ after(grammarAccess.getCallMessageRule()); } 
	 EOF 
;

// Rule CallMessage
ruleCallMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallMessageAccess().getGroup()); }
(rule__CallMessage__Group__0)
{ after(grammarAccess.getCallMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNewMessage
entryRuleNewMessage 
:
{ before(grammarAccess.getNewMessageRule()); }
	 ruleNewMessage
{ after(grammarAccess.getNewMessageRule()); } 
	 EOF 
;

// Rule NewMessage
ruleNewMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNewMessageAccess().getGroup()); }
(rule__NewMessage__Group__0)
{ after(grammarAccess.getNewMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnMessage
entryRuleReturnMessage 
:
{ before(grammarAccess.getReturnMessageRule()); }
	 ruleReturnMessage
{ after(grammarAccess.getReturnMessageRule()); } 
	 EOF 
;

// Rule ReturnMessage
ruleReturnMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnMessageAccess().getGroup()); }
(rule__ReturnMessage__Group__0)
{ after(grammarAccess.getReturnMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeleteMessage
entryRuleDeleteMessage 
:
{ before(grammarAccess.getDeleteMessageRule()); }
	 ruleDeleteMessage
{ after(grammarAccess.getDeleteMessageRule()); } 
	 EOF 
;

// Rule DeleteMessage
ruleDeleteMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeleteMessageAccess().getGroup()); }
(rule__DeleteMessage__Group__0)
{ after(grammarAccess.getDeleteMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSelfMessage
entryRuleSelfMessage 
:
{ before(grammarAccess.getSelfMessageRule()); }
	 ruleSelfMessage
{ after(grammarAccess.getSelfMessageRule()); } 
	 EOF 
;

// Rule SelfMessage
ruleSelfMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSelfMessageAccess().getGroup()); }
(rule__SelfMessage__Group__0)
{ after(grammarAccess.getSelfMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReference
entryRuleReference 
:
{ before(grammarAccess.getReferenceRule()); }
	 ruleReference
{ after(grammarAccess.getReferenceRule()); } 
	 EOF 
;

// Rule Reference
ruleReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReferenceAccess().getGroup()); }
(rule__Reference__Group__0)
{ after(grammarAccess.getReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForeachExpression
entryRuleForeachExpression 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
}
:
{ before(grammarAccess.getForeachExpressionRule()); }
	 ruleForeachExpression
{ after(grammarAccess.getForeachExpressionRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ForeachExpression
ruleForeachExpression
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForeachExpressionAccess().getGroup()); }
(rule__ForeachExpression__Group__0)
{ after(grammarAccess.getForeachExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleValueWithSpaces
entryRuleValueWithSpaces 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
}
:
{ before(grammarAccess.getValueWithSpacesRule()); }
	 ruleValueWithSpaces
{ after(grammarAccess.getValueWithSpacesRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ValueWithSpaces
ruleValueWithSpaces
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens();
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueWithSpacesAccess().getAlternatives()); }
(rule__ValueWithSpaces__Alternatives)*
{ after(grammarAccess.getValueWithSpacesAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getGroup()); }
(rule__Annotation__Group__0)
{ after(grammarAccess.getAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProperty
entryRuleProperty 
:
{ before(grammarAccess.getPropertyRule()); }
	 ruleProperty
{ after(grammarAccess.getPropertyRule()); } 
	 EOF 
;

// Rule Property
ruleProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPropertyAccess().getAlternatives()); }
(rule__Property__Alternatives)
{ after(grammarAccess.getPropertyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignProperty
entryRuleAssignProperty 
:
{ before(grammarAccess.getAssignPropertyRule()); }
	 ruleAssignProperty
{ after(grammarAccess.getAssignPropertyRule()); } 
	 EOF 
;

// Rule AssignProperty
ruleAssignProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignPropertyAccess().getGroup()); }
(rule__AssignProperty__Group__0)
{ after(grammarAccess.getAssignPropertyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueProperty
entryRuleValueProperty 
:
{ before(grammarAccess.getValuePropertyRule()); }
	 ruleValueProperty
{ after(grammarAccess.getValuePropertyRule()); } 
	 EOF 
;

// Rule ValueProperty
ruleValueProperty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuePropertyAccess().getValueAssignment()); }
(rule__ValueProperty__ValueAssignment)
{ after(grammarAccess.getValuePropertyAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedID
entryRuleExtendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleExtendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule ExtendedID
ruleExtendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleReal
entryRuleReal 
:
{ before(grammarAccess.getRealRule()); }
	 ruleReal
{ after(grammarAccess.getRealRule()); } 
	 EOF 
;

// Rule Real
ruleReal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRealAccess().getGroup()); }
(rule__Real__Group__0)
{ after(grammarAccess.getRealAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInteger
entryRuleInteger 
:
{ before(grammarAccess.getIntegerRule()); }
	 ruleInteger
{ after(grammarAccess.getIntegerRule()); } 
	 EOF 
;

// Rule Integer
ruleInteger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerAccess().getGroup()); }
(rule__Integer__Group__0)
{ after(grammarAccess.getIntegerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Transition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getMessageParserRuleCall_0()); }
	ruleMessage
{ after(grammarAccess.getTransitionAccess().getMessageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getFragmentParserRuleCall_1()); }
	ruleFragment
{ after(grammarAccess.getTransitionAccess().getFragmentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Fragment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFragmentAccess().getIfElseFragmentParserRuleCall_0()); }
	ruleIfElseFragment
{ after(grammarAccess.getFragmentAccess().getIfElseFragmentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFragmentAccess().getForeachFragmentParserRuleCall_1()); }
	ruleForeachFragment
{ after(grammarAccess.getFragmentAccess().getForeachFragmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFragmentAccess().getAssertFragmentParserRuleCall_2()); }
	ruleAssertFragment
{ after(grammarAccess.getFragmentAccess().getAssertFragmentParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getFragmentAccess().getLoopFragmentParserRuleCall_3()); }
	ruleLoopFragment
{ after(grammarAccess.getFragmentAccess().getLoopFragmentParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getFragmentAccess().getBreakFragmentParserRuleCall_4()); }
	ruleBreakFragment
{ after(grammarAccess.getFragmentAccess().getBreakFragmentParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getFragmentAccess().getNextFragmentParserRuleCall_5()); }
	ruleNextFragment
{ after(grammarAccess.getFragmentAccess().getNextFragmentParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getCallMessageParserRuleCall_0()); }
	ruleCallMessage
{ after(grammarAccess.getMessageAccess().getCallMessageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getNewMessageParserRuleCall_1()); }
	ruleNewMessage
{ after(grammarAccess.getMessageAccess().getNewMessageParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getDeleteMessageParserRuleCall_2()); }
	ruleDeleteMessage
{ after(grammarAccess.getMessageAccess().getDeleteMessageParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getSelfMessageParserRuleCall_3()); }
	ruleSelfMessage
{ after(grammarAccess.getMessageAccess().getSelfMessageParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMessageAccess().getFoundMessageParserRuleCall_4()); }
	ruleFoundMessage
{ after(grammarAccess.getMessageAccess().getFoundMessageParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachExpression__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachExpressionAccess().getGroup_2_0()); }
(rule__ForeachExpression__Group_2_0__0)
{ after(grammarAccess.getForeachExpressionAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getForeachExpressionAccess().getIDTerminalRuleCall_2_1()); }
	RULE_ID
{ after(grammarAccess.getForeachExpressionAccess().getIDTerminalRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueWithSpaces__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueWithSpacesAccess().getOPERATORTerminalRuleCall_0()); }
	RULE_OPERATOR
{ after(grammarAccess.getValueWithSpacesAccess().getOPERATORTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueWithSpacesAccess().getValueParserRuleCall_1()); }
	ruleValue
{ after(grammarAccess.getValueWithSpacesAccess().getValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueWithSpacesAccess().getANY_OTHERTerminalRuleCall_2()); }
	RULE_ANY_OTHER
{ after(grammarAccess.getValueWithSpacesAccess().getANY_OTHERTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueWithSpacesAccess().getWSTerminalRuleCall_3()); }
	RULE_WS
{ after(grammarAccess.getValueWithSpacesAccess().getWSTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Property__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPropertyAccess().getAssignPropertyParserRuleCall_0()); }
	ruleAssignProperty
{ after(grammarAccess.getPropertyAccess().getAssignPropertyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPropertyAccess().getValuePropertyParserRuleCall_1()); }
	ruleValueProperty
{ after(grammarAccess.getPropertyAccess().getValuePropertyParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIntegerParserRuleCall_0()); }
	ruleInteger
{ after(grammarAccess.getValueAccess().getIntegerParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
	RULE_STRING
{ after(grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getExtendedIDParserRuleCall_2()); }
	ruleExtendedID
{ after(grammarAccess.getValueAccess().getExtendedIDParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getBOOLEANTerminalRuleCall_3()); }
	RULE_BOOLEAN
{ after(grammarAccess.getValueAccess().getBOOLEANTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getValueAccess().getNULLTerminalRuleCall_4()); }
	RULE_NULL
{ after(grammarAccess.getValueAccess().getNULLTerminalRuleCall_4()); }
)

    |(
{ before(grammarAccess.getValueAccess().getRealParserRuleCall_5()); }
	ruleReal
{ after(grammarAccess.getValueAccess().getRealParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Alternatives_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getEKeyword_4_0_0()); }

	'e' 

{ after(grammarAccess.getRealAccess().getEKeyword_4_0_0()); }
)

    |(
{ before(grammarAccess.getRealAccess().getEKeyword_4_0_1()); }

	'E' 

{ after(grammarAccess.getRealAccess().getEKeyword_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getPlusSignKeyword_4_1_0()); }

	'+' 

{ after(grammarAccess.getRealAccess().getPlusSignKeyword_4_1_0()); }
)

    |(
{ before(grammarAccess.getRealAccess().getHyphenMinusKeyword_4_1_1()); }

	'-' 

{ after(grammarAccess.getRealAccess().getHyphenMinusKeyword_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsAssignment_0()); }
(rule__Model__ImportsAssignment_0)*
{ after(grammarAccess.getModelAccess().getImportsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSequenceAssignment_1()); }
(rule__Model__SequenceAssignment_1)*
{ after(grammarAccess.getModelAccess().getSequenceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__0__Impl
	rule__Sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getAnnotationAssignment_0()); }
(rule__Sequence__AnnotationAssignment_0)*
{ after(grammarAccess.getSequenceAccess().getAnnotationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__1__Impl
	rule__Sequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSequenceKeyword_1()); }
(
	'sequence' 
)
{ after(grammarAccess.getSequenceAccess().getSequenceKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__2__Impl
	rule__Sequence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getNameAssignment_2()); }
(rule__Sequence__NameAssignment_2)
{ after(grammarAccess.getSequenceAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__3__Impl
	rule__Sequence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getParticipantAssignment_3()); }
(rule__Sequence__ParticipantAssignment_3)
{ after(grammarAccess.getSequenceAccess().getParticipantAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__4__Impl
	rule__Sequence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getGroup_4()); }
(rule__Sequence__Group_4__0)*
{ after(grammarAccess.getSequenceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__5__Impl
	rule__Sequence__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getTransitionAssignment_5()); }
(rule__Sequence__TransitionAssignment_5)*
{ after(grammarAccess.getSequenceAccess().getTransitionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getSequenceAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Sequence__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_4__0__Impl
	rule__Sequence__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getCommaKeyword_4_0()); }
(
	',' 
)
{ after(grammarAccess.getSequenceAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getParticipantAssignment_4_1()); }
(rule__Sequence__ParticipantAssignment_4_1)
{ after(grammarAccess.getSequenceAccess().getParticipantAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Participant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participant__Group__0__Impl
	rule__Participant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getNameAssignment_0()); }
(rule__Participant__NameAssignment_0)
{ after(grammarAccess.getParticipantAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Participant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getGroup_1()); }
(rule__Participant__Group_1__0)?
{ after(grammarAccess.getParticipantAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Participant__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participant__Group_1__0__Impl
	rule__Participant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getParticipantAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Participant__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participant__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getClassifierAssignment_1_1()); }
(rule__Participant__ClassifierAssignment_1_1)
{ after(grammarAccess.getParticipantAccess().getClassifierAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfElseFragment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group__0__Impl
	rule__IfElseFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfElseFragmentAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group__1__Impl
	rule__IfElseFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getExprAssignment_1()); }
(rule__IfElseFragment__ExprAssignment_1)
{ after(grammarAccess.getIfElseFragmentAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group__2__Impl
	rule__IfElseFragment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getIfElseFragmentAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group__3__Impl
	rule__IfElseFragment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getTransitionAssignment_3()); }
(rule__IfElseFragment__TransitionAssignment_3)*
{ after(grammarAccess.getIfElseFragmentAccess().getTransitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group__4__Impl
	rule__IfElseFragment__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getGroup_4()); }
(rule__IfElseFragment__Group_4__0)*
{ after(grammarAccess.getIfElseFragmentAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group__5__Impl
	rule__IfElseFragment__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getGroup_5()); }
(rule__IfElseFragment__Group_5__0)?
{ after(grammarAccess.getIfElseFragmentAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getEndKeyword_6()); }

	'end' 

{ after(grammarAccess.getIfElseFragmentAccess().getEndKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__IfElseFragment__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group_4__0__Impl
	rule__IfElseFragment__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElsifKeyword_4_0()); }
(
	'elsif' 
)
{ after(grammarAccess.getIfElseFragmentAccess().getElsifKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group_4__1__Impl
	rule__IfElseFragment__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElseIfExprAssignment_4_1()); }
(rule__IfElseFragment__ElseIfExprAssignment_4_1)
{ after(grammarAccess.getIfElseFragmentAccess().getElseIfExprAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group_4__2__Impl
	rule__IfElseFragment__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getThenKeyword_4_2()); }

	'then' 

{ after(grammarAccess.getIfElseFragmentAccess().getThenKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElseIftransitionAssignment_4_3()); }
(rule__IfElseFragment__ElseIftransitionAssignment_4_3)*
{ after(grammarAccess.getIfElseFragmentAccess().getElseIftransitionAssignment_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IfElseFragment__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group_5__0__Impl
	rule__IfElseFragment__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElseKeyword_5_0()); }
(
	'else' 
)
{ after(grammarAccess.getIfElseFragmentAccess().getElseKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfElseFragment__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfElseFragment__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElseTransitionAssignment_5_1()); }
(rule__IfElseFragment__ElseTransitionAssignment_5_1)*
{ after(grammarAccess.getIfElseFragmentAccess().getElseTransitionAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForeachFragment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachFragment__Group__0__Impl
	rule__ForeachFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachFragment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachFragmentAccess().getForeachKeyword_0()); }

	'foreach' 

{ after(grammarAccess.getForeachFragmentAccess().getForeachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachFragment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachFragment__Group__1__Impl
	rule__ForeachFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachFragment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachFragmentAccess().getExprAssignment_1()); }
(rule__ForeachFragment__ExprAssignment_1)
{ after(grammarAccess.getForeachFragmentAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachFragment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachFragment__Group__2__Impl
	rule__ForeachFragment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachFragment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachFragmentAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getForeachFragmentAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachFragment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachFragment__Group__3__Impl
	rule__ForeachFragment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachFragment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachFragmentAccess().getTransitionAssignment_3()); }
(rule__ForeachFragment__TransitionAssignment_3)*
{ after(grammarAccess.getForeachFragmentAccess().getTransitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachFragment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachFragment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachFragment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachFragmentAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getForeachFragmentAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__LoopFragment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopFragment__Group__0__Impl
	rule__LoopFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopFragment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopFragmentAccess().getWhileKeyword_0()); }

	'while' 

{ after(grammarAccess.getLoopFragmentAccess().getWhileKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopFragment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopFragment__Group__1__Impl
	rule__LoopFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopFragment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopFragmentAccess().getExprAssignment_1()); }
(rule__LoopFragment__ExprAssignment_1)
{ after(grammarAccess.getLoopFragmentAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopFragment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopFragment__Group__2__Impl
	rule__LoopFragment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopFragment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopFragmentAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getLoopFragmentAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopFragment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopFragment__Group__3__Impl
	rule__LoopFragment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopFragment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopFragmentAccess().getTransitionAssignment_3()); }
(rule__LoopFragment__TransitionAssignment_3)*
{ after(grammarAccess.getLoopFragmentAccess().getTransitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopFragment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopFragment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopFragment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopFragmentAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getLoopFragmentAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AssertFragment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertFragment__Group__0__Impl
	rule__AssertFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertFragment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertFragmentAccess().getAssertKeyword_0()); }

	'assert' 

{ after(grammarAccess.getAssertFragmentAccess().getAssertKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertFragment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertFragment__Group__1__Impl
	rule__AssertFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertFragment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertFragmentAccess().getExprAssignment_1()); }
(rule__AssertFragment__ExprAssignment_1)
{ after(grammarAccess.getAssertFragmentAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertFragment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertFragment__Group__2__Impl
	rule__AssertFragment__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertFragment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertFragmentAccess().getThenKeyword_2()); }

	'then' 

{ after(grammarAccess.getAssertFragmentAccess().getThenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertFragment__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertFragment__Group__3__Impl
	rule__AssertFragment__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertFragment__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertFragmentAccess().getTransitionAssignment_3()); }
(rule__AssertFragment__TransitionAssignment_3)*
{ after(grammarAccess.getAssertFragmentAccess().getTransitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssertFragment__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssertFragment__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssertFragment__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertFragmentAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getAssertFragmentAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__BreakFragment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakFragment__Group__0__Impl
	rule__BreakFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getBreakFragmentAction_0()); }
(

)
{ after(grammarAccess.getBreakFragmentAccess().getBreakFragmentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakFragment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakFragment__Group__1__Impl
	rule__BreakFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getBreakKeyword_1()); }

	'break' 

{ after(grammarAccess.getBreakFragmentAccess().getBreakKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakFragment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakFragment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getGroup_2()); }
(rule__BreakFragment__Group_2__0)?
{ after(grammarAccess.getBreakFragmentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__BreakFragment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakFragment__Group_2__0__Impl
	rule__BreakFragment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getExprAssignment_2_0()); }
(rule__BreakFragment__ExprAssignment_2_0)
{ after(grammarAccess.getBreakFragmentAccess().getExprAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakFragment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakFragment__Group_2__1__Impl
	rule__BreakFragment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getThenKeyword_2_1()); }

	'then' 

{ after(grammarAccess.getBreakFragmentAccess().getThenKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakFragment__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakFragment__Group_2__2__Impl
	rule__BreakFragment__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getTransitionAssignment_2_2()); }
(rule__BreakFragment__TransitionAssignment_2_2)*
{ after(grammarAccess.getBreakFragmentAccess().getTransitionAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BreakFragment__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BreakFragment__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getEndKeyword_2_3()); }

	'end' 

{ after(grammarAccess.getBreakFragmentAccess().getEndKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NextFragment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextFragment__Group__0__Impl
	rule__NextFragment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getNextFragmentAction_0()); }
(

)
{ after(grammarAccess.getNextFragmentAccess().getNextFragmentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextFragment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextFragment__Group__1__Impl
	rule__NextFragment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getNextKeyword_1()); }

	'next' 

{ after(grammarAccess.getNextFragmentAccess().getNextKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextFragment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextFragment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getGroup_2()); }
(rule__NextFragment__Group_2__0)?
{ after(grammarAccess.getNextFragmentAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NextFragment__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextFragment__Group_2__0__Impl
	rule__NextFragment__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getExprAssignment_2_0()); }
(rule__NextFragment__ExprAssignment_2_0)
{ after(grammarAccess.getNextFragmentAccess().getExprAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextFragment__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextFragment__Group_2__1__Impl
	rule__NextFragment__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getThenKeyword_2_1()); }

	'then' 

{ after(grammarAccess.getNextFragmentAccess().getThenKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextFragment__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextFragment__Group_2__2__Impl
	rule__NextFragment__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getTransitionAssignment_2_2()); }
(rule__NextFragment__TransitionAssignment_2_2)*
{ after(grammarAccess.getNextFragmentAccess().getTransitionAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NextFragment__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NextFragment__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getEndKeyword_2_3()); }

	'end' 

{ after(grammarAccess.getNextFragmentAccess().getEndKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FoundMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group__0__Impl
	rule__FoundMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getCallsKeyword_0()); }

	'calls' 

{ after(grammarAccess.getFoundMessageAccess().getCallsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group__1__Impl
	rule__FoundMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getTargetParticipantAssignment_1()); }
(rule__FoundMessage__TargetParticipantAssignment_1)
{ after(grammarAccess.getFoundMessageAccess().getTargetParticipantAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group__2__Impl
	rule__FoundMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getFoundMessageAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group__3__Impl
	rule__FoundMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getNameAssignment_3()); }
(rule__FoundMessage__NameAssignment_3)
{ after(grammarAccess.getFoundMessageAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group__4__Impl
	rule__FoundMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getGroup_4()); }
(rule__FoundMessage__Group_4__0)?
{ after(grammarAccess.getFoundMessageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getReturnAssignment_5()); }
(rule__FoundMessage__ReturnAssignment_5)?
{ after(grammarAccess.getFoundMessageAccess().getReturnAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FoundMessage__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group_4__0__Impl
	rule__FoundMessage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getLeftParenthesisKeyword_4_0()); }
(
	'(' 
)
{ after(grammarAccess.getFoundMessageAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group_4__1__Impl
	rule__FoundMessage__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getGroup_4_1()); }
(rule__FoundMessage__Group_4_1__0)?
{ after(grammarAccess.getFoundMessageAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getFoundMessageAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FoundMessage__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group_4_1__0__Impl
	rule__FoundMessage__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getParameterAssignment_4_1_0()); }
(rule__FoundMessage__ParameterAssignment_4_1_0)
{ after(grammarAccess.getFoundMessageAccess().getParameterAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getGroup_4_1_1()); }
(rule__FoundMessage__Group_4_1_1__0)*
{ after(grammarAccess.getFoundMessageAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FoundMessage__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group_4_1_1__0__Impl
	rule__FoundMessage__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getCommaKeyword_4_1_1_0()); }

	',' 

{ after(grammarAccess.getFoundMessageAccess().getCommaKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FoundMessage__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FoundMessage__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getParameterAssignment_4_1_1_1()); }
(rule__FoundMessage__ParameterAssignment_4_1_1_1)
{ after(grammarAccess.getFoundMessageAccess().getParameterAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group__0__Impl
	rule__CallMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getSourceAssignment_0()); }
(rule__CallMessage__SourceAssignment_0)
{ after(grammarAccess.getCallMessageAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group__1__Impl
	rule__CallMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getCallsKeyword_1()); }

	'calls' 

{ after(grammarAccess.getCallMessageAccess().getCallsKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group__2__Impl
	rule__CallMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getTargetAssignment_2()); }
(rule__CallMessage__TargetAssignment_2)
{ after(grammarAccess.getCallMessageAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group__3__Impl
	rule__CallMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getFullStopKeyword_3()); }

	'.' 

{ after(grammarAccess.getCallMessageAccess().getFullStopKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group__4__Impl
	rule__CallMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getNameAssignment_4()); }
(rule__CallMessage__NameAssignment_4)
{ after(grammarAccess.getCallMessageAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group__5__Impl
	rule__CallMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getGroup_5()); }
(rule__CallMessage__Group_5__0)?
{ after(grammarAccess.getCallMessageAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getReturnAssignment_6()); }
(rule__CallMessage__ReturnAssignment_6)?
{ after(grammarAccess.getCallMessageAccess().getReturnAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CallMessage__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group_5__0__Impl
	rule__CallMessage__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getLeftParenthesisKeyword_5_0()); }
(
	'(' 
)
{ after(grammarAccess.getCallMessageAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group_5__1__Impl
	rule__CallMessage__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getGroup_5_1()); }
(rule__CallMessage__Group_5_1__0)?
{ after(grammarAccess.getCallMessageAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getCallMessageAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CallMessage__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group_5_1__0__Impl
	rule__CallMessage__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getParameterAssignment_5_1_0()); }
(rule__CallMessage__ParameterAssignment_5_1_0)
{ after(grammarAccess.getCallMessageAccess().getParameterAssignment_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getGroup_5_1_1()); }
(rule__CallMessage__Group_5_1_1__0)*
{ after(grammarAccess.getCallMessageAccess().getGroup_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallMessage__Group_5_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group_5_1_1__0__Impl
	rule__CallMessage__Group_5_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group_5_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getCommaKeyword_5_1_1_0()); }

	',' 

{ after(grammarAccess.getCallMessageAccess().getCommaKeyword_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallMessage__Group_5_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallMessage__Group_5_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__Group_5_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getParameterAssignment_5_1_1_1()); }
(rule__CallMessage__ParameterAssignment_5_1_1_1)
{ after(grammarAccess.getCallMessageAccess().getParameterAssignment_5_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NewMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group__0__Impl
	rule__NewMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getSourceAssignment_0()); }
(rule__NewMessage__SourceAssignment_0)
{ after(grammarAccess.getNewMessageAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group__1__Impl
	rule__NewMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getCreatesKeyword_1()); }

	'creates' 

{ after(grammarAccess.getNewMessageAccess().getCreatesKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group__2__Impl
	rule__NewMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getTargetAssignment_2()); }
(rule__NewMessage__TargetAssignment_2)
{ after(grammarAccess.getNewMessageAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group__3__Impl
	rule__NewMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getGroup_3()); }
(rule__NewMessage__Group_3__0)?
{ after(grammarAccess.getNewMessageAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getGroup_4()); }
(rule__NewMessage__Group_4__0)?
{ after(grammarAccess.getNewMessageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__NewMessage__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_3__0__Impl
	rule__NewMessage__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getFullStopKeyword_3_0()); }
(
	'.' 
)
{ after(grammarAccess.getNewMessageAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getNameAssignment_3_1()); }
(rule__NewMessage__NameAssignment_3_1)
{ after(grammarAccess.getNewMessageAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NewMessage__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_4__0__Impl
	rule__NewMessage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getLeftParenthesisKeyword_4_0()); }
(
	'(' 
)
{ after(grammarAccess.getNewMessageAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_4__1__Impl
	rule__NewMessage__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getGroup_4_1()); }
(rule__NewMessage__Group_4_1__0)?
{ after(grammarAccess.getNewMessageAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getNewMessageAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NewMessage__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_4_1__0__Impl
	rule__NewMessage__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getParameterAssignment_4_1_0()); }
(rule__NewMessage__ParameterAssignment_4_1_0)
{ after(grammarAccess.getNewMessageAccess().getParameterAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getGroup_4_1_1()); }
(rule__NewMessage__Group_4_1_1__0)*
{ after(grammarAccess.getNewMessageAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NewMessage__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_4_1_1__0__Impl
	rule__NewMessage__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getCommaKeyword_4_1_1_0()); }

	',' 

{ after(grammarAccess.getNewMessageAccess().getCommaKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NewMessage__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NewMessage__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getParameterAssignment_4_1_1_1()); }
(rule__NewMessage__ParameterAssignment_4_1_1_1)
{ after(grammarAccess.getNewMessageAccess().getParameterAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group__0__Impl
	rule__ReturnMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getReturnsKeyword_0()); }

	'returns' 

{ after(grammarAccess.getReturnMessageAccess().getReturnsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group__1__Impl
	rule__ReturnMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getNameAssignment_1()); }
(rule__ReturnMessage__NameAssignment_1)
{ after(grammarAccess.getReturnMessageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getGroup_2()); }
(rule__ReturnMessage__Group_2__0)?
{ after(grammarAccess.getReturnMessageAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnMessage__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group_2__0__Impl
	rule__ReturnMessage__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getLeftParenthesisKeyword_2_0()); }
(
	'(' 
)
{ after(grammarAccess.getReturnMessageAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnMessage__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group_2__1__Impl
	rule__ReturnMessage__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getGroup_2_1()); }
(rule__ReturnMessage__Group_2_1__0)?
{ after(grammarAccess.getReturnMessageAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnMessage__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getReturnMessageAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ReturnMessage__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group_2_1__0__Impl
	rule__ReturnMessage__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getParameterAssignment_2_1_0()); }
(rule__ReturnMessage__ParameterAssignment_2_1_0)
{ after(grammarAccess.getReturnMessageAccess().getParameterAssignment_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnMessage__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getGroup_2_1_1()); }
(rule__ReturnMessage__Group_2_1_1__0)*
{ after(grammarAccess.getReturnMessageAccess().getGroup_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReturnMessage__Group_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group_2_1_1__0__Impl
	rule__ReturnMessage__Group_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getCommaKeyword_2_1_1_0()); }

	',' 

{ after(grammarAccess.getReturnMessageAccess().getCommaKeyword_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnMessage__Group_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReturnMessage__Group_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__Group_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getParameterAssignment_2_1_1_1()); }
(rule__ReturnMessage__ParameterAssignment_2_1_1_1)
{ after(grammarAccess.getReturnMessageAccess().getParameterAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeleteMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group__0__Impl
	rule__DeleteMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getSourceAssignment_0()); }
(rule__DeleteMessage__SourceAssignment_0)
{ after(grammarAccess.getDeleteMessageAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group__1__Impl
	rule__DeleteMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getDestroysKeyword_1()); }

	'destroys' 

{ after(grammarAccess.getDeleteMessageAccess().getDestroysKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group__2__Impl
	rule__DeleteMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getTargetAssignment_2()); }
(rule__DeleteMessage__TargetAssignment_2)
{ after(grammarAccess.getDeleteMessageAccess().getTargetAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getGroup_3()); }
(rule__DeleteMessage__Group_3__0)?
{ after(grammarAccess.getDeleteMessageAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DeleteMessage__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3__0__Impl
	rule__DeleteMessage__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getFullStopKeyword_3_0()); }
(
	'.' 
)
{ after(grammarAccess.getDeleteMessageAccess().getFullStopKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3__1__Impl
	rule__DeleteMessage__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getNameAssignment_3_1()); }
(rule__DeleteMessage__NameAssignment_3_1)
{ after(grammarAccess.getDeleteMessageAccess().getNameAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getGroup_3_2()); }
(rule__DeleteMessage__Group_3_2__0)?
{ after(grammarAccess.getDeleteMessageAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeleteMessage__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3_2__0__Impl
	rule__DeleteMessage__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getLeftParenthesisKeyword_3_2_0()); }
(
	'(' 
)
{ after(grammarAccess.getDeleteMessageAccess().getLeftParenthesisKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3_2__1__Impl
	rule__DeleteMessage__Group_3_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getGroup_3_2_1()); }
(rule__DeleteMessage__Group_3_2_1__0)?
{ after(grammarAccess.getDeleteMessageAccess().getGroup_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group_3_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getRightParenthesisKeyword_3_2_2()); }

	')' 

{ after(grammarAccess.getDeleteMessageAccess().getRightParenthesisKeyword_3_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DeleteMessage__Group_3_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3_2_1__0__Impl
	rule__DeleteMessage__Group_3_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getParameterAssignment_3_2_1_0()); }
(rule__DeleteMessage__ParameterAssignment_3_2_1_0)
{ after(grammarAccess.getDeleteMessageAccess().getParameterAssignment_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group_3_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getGroup_3_2_1_1()); }
(rule__DeleteMessage__Group_3_2_1_1__0)*
{ after(grammarAccess.getDeleteMessageAccess().getGroup_3_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DeleteMessage__Group_3_2_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3_2_1_1__0__Impl
	rule__DeleteMessage__Group_3_2_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3_2_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getCommaKeyword_3_2_1_1_0()); }

	',' 

{ after(grammarAccess.getDeleteMessageAccess().getCommaKeyword_3_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DeleteMessage__Group_3_2_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DeleteMessage__Group_3_2_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__Group_3_2_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getParameterAssignment_3_2_1_1_1()); }
(rule__DeleteMessage__ParameterAssignment_3_2_1_1_1)
{ after(grammarAccess.getDeleteMessageAccess().getParameterAssignment_3_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelfMessage__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group__0__Impl
	rule__SelfMessage__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getSourceAssignment_0()); }
(rule__SelfMessage__SourceAssignment_0)
{ after(grammarAccess.getSelfMessageAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group__1__Impl
	rule__SelfMessage__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getSelfKeyword_1()); }

	'self' 

{ after(grammarAccess.getSelfMessageAccess().getSelfKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group__2__Impl
	rule__SelfMessage__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getSelfMessageAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group__3__Impl
	rule__SelfMessage__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getNameAssignment_3()); }
(rule__SelfMessage__NameAssignment_3)
{ after(grammarAccess.getSelfMessageAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group__4__Impl
	rule__SelfMessage__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getGroup_4()); }
(rule__SelfMessage__Group_4__0)?
{ after(grammarAccess.getSelfMessageAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group__5__Impl
	rule__SelfMessage__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getReturnAssignment_5()); }
(rule__SelfMessage__ReturnAssignment_5)?
{ after(grammarAccess.getSelfMessageAccess().getReturnAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getGroup_6()); }
(rule__SelfMessage__Group_6__0)?
{ after(grammarAccess.getSelfMessageAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SelfMessage__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_4__0__Impl
	rule__SelfMessage__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getLeftParenthesisKeyword_4_0()); }
(
	'(' 
)
{ after(grammarAccess.getSelfMessageAccess().getLeftParenthesisKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_4__1__Impl
	rule__SelfMessage__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getGroup_4_1()); }
(rule__SelfMessage__Group_4_1__0)?
{ after(grammarAccess.getSelfMessageAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getRightParenthesisKeyword_4_2()); }

	')' 

{ after(grammarAccess.getSelfMessageAccess().getRightParenthesisKeyword_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SelfMessage__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_4_1__0__Impl
	rule__SelfMessage__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getParameterAssignment_4_1_0()); }
(rule__SelfMessage__ParameterAssignment_4_1_0)
{ after(grammarAccess.getSelfMessageAccess().getParameterAssignment_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getGroup_4_1_1()); }
(rule__SelfMessage__Group_4_1_1__0)*
{ after(grammarAccess.getSelfMessageAccess().getGroup_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelfMessage__Group_4_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_4_1_1__0__Impl
	rule__SelfMessage__Group_4_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_4_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getCommaKeyword_4_1_1_0()); }

	',' 

{ after(grammarAccess.getSelfMessageAccess().getCommaKeyword_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group_4_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_4_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_4_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getParameterAssignment_4_1_1_1()); }
(rule__SelfMessage__ParameterAssignment_4_1_1_1)
{ after(grammarAccess.getSelfMessageAccess().getParameterAssignment_4_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SelfMessage__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_6__0__Impl
	rule__SelfMessage__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getBeginKeyword_6_0()); }
(
	'begin' 
)
{ after(grammarAccess.getSelfMessageAccess().getBeginKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_6__1__Impl
	rule__SelfMessage__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getTransitionAssignment_6_1()); }
(rule__SelfMessage__TransitionAssignment_6_1)*
{ after(grammarAccess.getSelfMessageAccess().getTransitionAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SelfMessage__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SelfMessage__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getEndKeyword_6_2()); }

	'end' 

{ after(grammarAccess.getSelfMessageAccess().getEndKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
(rule__Parameter__NameAssignment_0)
{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getGroup_1()); }
(rule__Parameter__Group_1__0)?
{ after(grammarAccess.getParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Parameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_1__0__Impl
	rule__Parameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getColonKeyword_1_0()); }

	':' 

{ after(grammarAccess.getParameterAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeAssignment_1_1()); }
(rule__Parameter__TypeAssignment_1_1)
{ after(grammarAccess.getParameterAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__0__Impl
	rule__Reference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getTypeAssignment_0()); }
(rule__Reference__TypeAssignment_0)
{ after(grammarAccess.getReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getArrayAssignment_1()); }
(rule__Reference__ArrayAssignment_1)*
{ after(grammarAccess.getReferenceAccess().getArrayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getArrayAction_0()); }
(

)
{ after(grammarAccess.getArrayAccess().getArrayAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
	rule__Array__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getSizeAssignment_2()); }
(rule__Array__SizeAssignment_2)?
{ after(grammarAccess.getArrayAccess().getSizeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForeachExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachExpression__Group__0__Impl
	rule__ForeachExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachExpressionAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getForeachExpressionAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachExpression__Group__1__Impl
	rule__ForeachExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachExpressionAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getForeachExpressionAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachExpressionAccess().getAlternatives_2()); }
(rule__ForeachExpression__Alternatives_2)
{ after(grammarAccess.getForeachExpressionAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ForeachExpression__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachExpression__Group_2_0__0__Impl
	rule__ForeachExpression__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachExpression__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachExpressionAccess().getNATURALTerminalRuleCall_2_0_0()); }
	RULE_NATURAL
{ after(grammarAccess.getForeachExpressionAccess().getNATURALTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachExpression__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachExpression__Group_2_0__1__Impl
	rule__ForeachExpression__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachExpression__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachExpressionAccess().getFullStopFullStopKeyword_2_0_1()); }

	'..' 

{ after(grammarAccess.getForeachExpressionAccess().getFullStopFullStopKeyword_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForeachExpression__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForeachExpression__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachExpression__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachExpressionAccess().getNATURALTerminalRuleCall_2_0_2()); }
	RULE_NATURAL
{ after(grammarAccess.getForeachExpressionAccess().getNATURALTerminalRuleCall_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Annotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__0__Impl
	rule__Annotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__1__Impl
	rule__Annotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameAssignment_1()); }
(rule__Annotation__NameAssignment_1)
{ after(grammarAccess.getAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_2()); }
(rule__Annotation__Group_2__0)?
{ after(grammarAccess.getAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Annotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__0__Impl
	rule__Annotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__1__Impl
	rule__Annotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getPropertyAssignment_2_1()); }
(rule__Annotation__PropertyAssignment_2_1)
{ after(grammarAccess.getAnnotationAccess().getPropertyAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__2__Impl
	rule__Annotation__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
(rule__Annotation__Group_2_2__0)*
{ after(grammarAccess.getAnnotationAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Annotation__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2_2__0__Impl
	rule__Annotation__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getAnnotationAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Annotation__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Annotation__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getPropertyAssignment_2_2_1()); }
(rule__Annotation__PropertyAssignment_2_2_1)
{ after(grammarAccess.getAnnotationAccess().getPropertyAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AssignProperty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignProperty__Group__0__Impl
	rule__AssignProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignProperty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignPropertyAccess().getNameAssignment_0()); }
(rule__AssignProperty__NameAssignment_0)
{ after(grammarAccess.getAssignPropertyAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignProperty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignProperty__Group__1__Impl
	rule__AssignProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignProperty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignPropertyAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getAssignPropertyAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AssignProperty__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AssignProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AssignProperty__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignPropertyAccess().getValueAssignment_2()); }
(rule__AssignProperty__ValueAssignment_2)
{ after(grammarAccess.getAssignPropertyAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Real__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group__0__Impl
	rule__Real__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getRealAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group__1__Impl
	rule__Real__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getNATURALTerminalRuleCall_1()); }
	RULE_NATURAL
{ after(grammarAccess.getRealAccess().getNATURALTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group__2__Impl
	rule__Real__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getFullStopKeyword_2()); }

	'.' 

{ after(grammarAccess.getRealAccess().getFullStopKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group__3__Impl
	rule__Real__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getNATURALTerminalRuleCall_3()); }
	RULE_NATURAL
{ after(grammarAccess.getRealAccess().getNATURALTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getGroup_4()); }
(rule__Real__Group_4__0)?
{ after(grammarAccess.getRealAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Real__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group_4__0__Impl
	rule__Real__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getAlternatives_4_0()); }
(rule__Real__Alternatives_4_0)
{ after(grammarAccess.getRealAccess().getAlternatives_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group_4__1__Impl
	rule__Real__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getAlternatives_4_1()); }
(rule__Real__Alternatives_4_1)
{ after(grammarAccess.getRealAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Real__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Real__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Real__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRealAccess().getNATURALTerminalRuleCall_4_2()); }
	RULE_NATURAL
{ after(grammarAccess.getRealAccess().getNATURALTerminalRuleCall_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Integer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__0__Impl
	rule__Integer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
(
	'-' 
)?
{ after(grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Integer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Integer__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Integer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerAccess().getNATURALTerminalRuleCall_1()); }
	RULE_NATURAL
{ after(grammarAccess.getIntegerAccess().getNATURALTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Model__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getModelAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Model__SequenceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getSequenceSequenceParserRuleCall_1_0()); }
	ruleSequence{ after(grammarAccess.getModelAccess().getSequenceSequenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__AnnotationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSequenceAccess().getAnnotationAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSequenceAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__ParticipantAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getParticipantParticipantParserRuleCall_3_0()); }
	ruleParticipant{ after(grammarAccess.getSequenceAccess().getParticipantParticipantParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__ParticipantAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getParticipantParticipantParserRuleCall_4_1_0()); }
	ruleParticipant{ after(grammarAccess.getSequenceAccess().getParticipantParticipantParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__TransitionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getTransitionTransitionParserRuleCall_5_0()); }
	ruleTransition{ after(grammarAccess.getSequenceAccess().getTransitionTransitionParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParticipantAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__ClassifierAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getClassifierEntityCrossReference_1_1_0()); }
(
{ before(grammarAccess.getParticipantAccess().getClassifierEntityExtendedIDParserRuleCall_1_1_0_1()); }
	ruleExtendedID{ after(grammarAccess.getParticipantAccess().getClassifierEntityExtendedIDParserRuleCall_1_1_0_1()); }
)
{ after(grammarAccess.getParticipantAccess().getClassifierEntityCrossReference_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getExprValueWithSpacesParserRuleCall_1_0()); }
	ruleValueWithSpaces{ after(grammarAccess.getIfElseFragmentAccess().getExprValueWithSpacesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__TransitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
	ruleTransition{ after(grammarAccess.getIfElseFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__ElseIfExprAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElseIfExprValueWithSpacesParserRuleCall_4_1_0()); }
	ruleValueWithSpaces{ after(grammarAccess.getIfElseFragmentAccess().getElseIfExprValueWithSpacesParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__ElseIftransitionAssignment_4_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElseIftransitionTransitionParserRuleCall_4_3_0()); }
	ruleTransition{ after(grammarAccess.getIfElseFragmentAccess().getElseIftransitionTransitionParserRuleCall_4_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfElseFragment__ElseTransitionAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfElseFragmentAccess().getElseTransitionTransitionParserRuleCall_5_1_0()); }
	ruleTransition{ after(grammarAccess.getIfElseFragmentAccess().getElseTransitionTransitionParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachFragment__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachFragmentAccess().getExprForeachExpressionParserRuleCall_1_0()); }
	ruleForeachExpression{ after(grammarAccess.getForeachFragmentAccess().getExprForeachExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForeachFragment__TransitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForeachFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
	ruleTransition{ after(grammarAccess.getForeachFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopFragment__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopFragmentAccess().getExprValueWithSpacesParserRuleCall_1_0()); }
	ruleValueWithSpaces{ after(grammarAccess.getLoopFragmentAccess().getExprValueWithSpacesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopFragment__TransitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
	ruleTransition{ after(grammarAccess.getLoopFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertFragment__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertFragmentAccess().getExprValueWithSpacesParserRuleCall_1_0()); }
	ruleValueWithSpaces{ after(grammarAccess.getAssertFragmentAccess().getExprValueWithSpacesParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssertFragment__TransitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssertFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
	ruleTransition{ after(grammarAccess.getAssertFragmentAccess().getTransitionTransitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__ExprAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getExprValueWithSpacesParserRuleCall_2_0_0()); }
	ruleValueWithSpaces{ after(grammarAccess.getBreakFragmentAccess().getExprValueWithSpacesParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BreakFragment__TransitionAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBreakFragmentAccess().getTransitionTransitionParserRuleCall_2_2_0()); }
	ruleTransition{ after(grammarAccess.getBreakFragmentAccess().getTransitionTransitionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__ExprAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getExprValueWithSpacesParserRuleCall_2_0_0()); }
	ruleValueWithSpaces{ after(grammarAccess.getNextFragmentAccess().getExprValueWithSpacesParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NextFragment__TransitionAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNextFragmentAccess().getTransitionTransitionParserRuleCall_2_2_0()); }
	ruleTransition{ after(grammarAccess.getNextFragmentAccess().getTransitionTransitionParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__TargetParticipantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getTargetParticipantParticipantCrossReference_1_0()); }
(
{ before(grammarAccess.getFoundMessageAccess().getTargetParticipantParticipantIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFoundMessageAccess().getTargetParticipantParticipantIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFoundMessageAccess().getTargetParticipantParticipantCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getFoundMessageAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__ParameterAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getParameterParameterParserRuleCall_4_1_0_0()); }
	ruleParameter{ after(grammarAccess.getFoundMessageAccess().getParameterParameterParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__ParameterAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getParameterParameterParserRuleCall_4_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getFoundMessageAccess().getParameterParameterParserRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FoundMessage__ReturnAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFoundMessageAccess().getReturnReturnMessageParserRuleCall_5_0()); }
	ruleReturnMessage{ after(grammarAccess.getFoundMessageAccess().getReturnReturnMessageParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getSourceParticipantCrossReference_0_0()); }
(
{ before(grammarAccess.getCallMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getCallMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getCallMessageAccess().getSourceParticipantCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getTargetParticipantCrossReference_2_0()); }
(
{ before(grammarAccess.getCallMessageAccess().getTargetParticipantIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getCallMessageAccess().getTargetParticipantIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getCallMessageAccess().getTargetParticipantCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getCallMessageAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__ParameterAssignment_5_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getParameterParameterParserRuleCall_5_1_0_0()); }
	ruleParameter{ after(grammarAccess.getCallMessageAccess().getParameterParameterParserRuleCall_5_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__ParameterAssignment_5_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getParameterParameterParserRuleCall_5_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getCallMessageAccess().getParameterParameterParserRuleCall_5_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallMessage__ReturnAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallMessageAccess().getReturnReturnMessageParserRuleCall_6_0()); }
	ruleReturnMessage{ after(grammarAccess.getCallMessageAccess().getReturnReturnMessageParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getSourceParticipantCrossReference_0_0()); }
(
{ before(grammarAccess.getNewMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getNewMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getNewMessageAccess().getSourceParticipantCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getTargetParticipantCrossReference_2_0()); }
(
{ before(grammarAccess.getNewMessageAccess().getTargetParticipantIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getNewMessageAccess().getTargetParticipantIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getNewMessageAccess().getTargetParticipantCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getNameIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getNewMessageAccess().getNameIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__ParameterAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getParameterParameterParserRuleCall_4_1_0_0()); }
	ruleParameter{ after(grammarAccess.getNewMessageAccess().getParameterParameterParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NewMessage__ParameterAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNewMessageAccess().getParameterParameterParserRuleCall_4_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getNewMessageAccess().getParameterParameterParserRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getNameReferenceParserRuleCall_1_0()); }
	ruleReference{ after(grammarAccess.getReturnMessageAccess().getNameReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__ParameterAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getParameterParameterParserRuleCall_2_1_0_0()); }
	ruleParameter{ after(grammarAccess.getReturnMessageAccess().getParameterParameterParserRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnMessage__ParameterAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnMessageAccess().getParameterParameterParserRuleCall_2_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getReturnMessageAccess().getParameterParameterParserRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getSourceParticipantCrossReference_0_0()); }
(
{ before(grammarAccess.getDeleteMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getDeleteMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getDeleteMessageAccess().getSourceParticipantCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__TargetAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getTargetParticipantCrossReference_2_0()); }
(
{ before(grammarAccess.getDeleteMessageAccess().getTargetParticipantIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDeleteMessageAccess().getTargetParticipantIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDeleteMessageAccess().getTargetParticipantCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__NameAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getNameIDTerminalRuleCall_3_1_0()); }
	RULE_ID{ after(grammarAccess.getDeleteMessageAccess().getNameIDTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__ParameterAssignment_3_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getParameterParameterParserRuleCall_3_2_1_0_0()); }
	ruleParameter{ after(grammarAccess.getDeleteMessageAccess().getParameterParameterParserRuleCall_3_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DeleteMessage__ParameterAssignment_3_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeleteMessageAccess().getParameterParameterParserRuleCall_3_2_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getDeleteMessageAccess().getParameterParameterParserRuleCall_3_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getSourceParticipantCrossReference_0_0()); }
(
{ before(grammarAccess.getSelfMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSelfMessageAccess().getSourceParticipantIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSelfMessageAccess().getSourceParticipantCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getNameIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getSelfMessageAccess().getNameIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__ParameterAssignment_4_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getParameterParameterParserRuleCall_4_1_0_0()); }
	ruleParameter{ after(grammarAccess.getSelfMessageAccess().getParameterParameterParserRuleCall_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__ParameterAssignment_4_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getParameterParameterParserRuleCall_4_1_1_1_0()); }
	ruleParameter{ after(grammarAccess.getSelfMessageAccess().getParameterParameterParserRuleCall_4_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__ReturnAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getReturnReturnMessageParserRuleCall_5_0()); }
	ruleReturnMessage{ after(grammarAccess.getSelfMessageAccess().getReturnReturnMessageParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SelfMessage__TransitionAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSelfMessageAccess().getTransitionTransitionParserRuleCall_6_1_0()); }
	ruleTransition{ after(grammarAccess.getSelfMessageAccess().getTransitionTransitionParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getTypeReferenceParserRuleCall_1_1_0()); }
	ruleReference{ after(grammarAccess.getParameterAccess().getTypeReferenceParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getTypeEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getReferenceAccess().getTypeEntityExtendedIDParserRuleCall_0_0_1()); }
	ruleExtendedID{ after(grammarAccess.getReferenceAccess().getTypeEntityExtendedIDParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getReferenceAccess().getTypeEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reference__ArrayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReferenceAccess().getArrayArrayParserRuleCall_1_0()); }
	ruleArray{ after(grammarAccess.getReferenceAccess().getArrayArrayParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__SizeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getSizeNATURALTerminalRuleCall_2_0()); }
	RULE_NATURAL{ after(grammarAccess.getArrayAccess().getSizeNATURALTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__PropertyAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getPropertyPropertyParserRuleCall_2_1_0()); }
	ruleProperty{ after(grammarAccess.getAnnotationAccess().getPropertyPropertyParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__PropertyAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getPropertyPropertyParserRuleCall_2_2_1_0()); }
	ruleProperty{ after(grammarAccess.getAnnotationAccess().getPropertyPropertyParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignProperty__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignPropertyAccess().getNameExtendedIDParserRuleCall_0_0()); }
	ruleExtendedID{ after(grammarAccess.getAssignPropertyAccess().getNameExtendedIDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AssignProperty__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignPropertyAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getAssignPropertyAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueProperty__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuePropertyAccess().getValueValueParserRuleCall_0()); }
	ruleValue{ after(grammarAccess.getValuePropertyAccess().getValueValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_OPERATOR : ('++'|'--'|'=='|'>='|'<='|'!='|'<>'|'||'|'&&'|'-='|'+='|'='|'>>'|'<<'|'|=');

RULE_BOOLEAN : ('true'|'false');

RULE_NULL : ('null'|'nil'|'NULL');

RULE_ID : ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_NATURAL : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


