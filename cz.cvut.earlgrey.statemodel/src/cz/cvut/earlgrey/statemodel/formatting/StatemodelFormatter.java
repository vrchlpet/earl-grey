/*
 * generated by Xtext
 */
package cz.cvut.earlgrey.statemodel.formatting;

import org.eclipse.xtext.formatting.impl.FormattingConfig;

import cz.cvut.earlgrey.statemodel.services.StatemodelGrammarAccess;
import cz.cvut.earlgrey.xtext.formatting.AbstractDefaultFormatter;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an
 * example
 */
public class StatemodelFormatter extends AbstractDefaultFormatter {

	@Override
	protected void configureFormatting(FormattingConfig c) {
		StatemodelGrammarAccess f = (StatemodelGrammarAccess) getGrammarAccess();

		c.setLinewrap(1, 2, 3).after(f.getImportRule());

		initDefault(c, f); // loads default format config

		c.setLinewrap(0, 1, 2).before(f.getSL_COMMENTRule());
		c.setLinewrap(0, 1, 2).before(f.getML_COMMENTRule());
		c.setLinewrap(0, 1, 1).after(f.getML_COMMENTRule());
	}
}
