grammar cz.cvut.earlgrey.statemodel.Statemodel with cz.cvut.earlgrey.annotation.Annotation

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

generate statemodel "http://www.cvut.cz/earlgrey/statemodel/Statemodel"

Model:
    //(annotation+=Annotation*) => 
    (imports+=Import)* (elements+=Element)*
;

Import:
    'import' importURI=STRING
;

Element:
    Statemachine
    | State
;

// e.g.: statemachine Node end
Statemachine:
    (annotation+=Annotation*) => 
    'statemachine' name=CompositeID
        state+=State*
    'end'
;

// e.g.: state BublOn end
State:
    (annotation+=Annotation*) => 
    type=StateType name=CompositeID
        (element+=Activity)*
    'end'
;

Activity:
    TransitionBlock
    | State
;

// e.g.: light down do -> BulbDown end
TransitionBlock:
    event=ValueWithSpaces 'do'
        transition+=Transition+
    'end' 
;

Transition:
    ('if' guard = ValueWithSpaces 'then')? => (action=ValueWithSpaces)? => ARROW (=> state=CompositeID)
;

//// e.g.: light is up
//Event:
//    name = ValueWithSpaces
//;
//
//// e.g.: if light is down then
//Guard:
//    'if' expression = ValueWithSpaces 'then'
//;
//
//// e.g.: light up
//Action:
//    value = ValueWithSpaces
//;

terminal LITERAL:
    '++' | '--' | '==' | '>=' | '<=' | '!='
;

ValueWithSpaces hidden():
    (LITERAL | Value | ANY_OTHER | WS)*
;

enum StateType:
    NONE = 'state'
    | INITIAL = 'initial'
    | FINAL = 'final'
;

terminal ARROW:
    '->'
    | 'goto'
    | '=>'
;