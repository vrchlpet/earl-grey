grammar cz.cvut.earlgrey.statemodel.Statemodel with org.eclipse.xtext.common.Terminals

import "http://www.cvut.cz/earlgrey/classmodel/Classmodel" as cls
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
generate statemodel "http://www.cvut.cz/earlgrey/statemodel/Statemodel"

/**
 * Defines root node of a model.
 * Resource imports must be defined before other elements.
 */
Statemodel:
    (imports+=Import)* (statemachine+=Statemachine)*;

/**
 * statemachine "Abc" : package.ClassName
 */
Statemachine:
    'statemachine' name=Identifier (=> ':' mapped=[cls::Entity|QualifiedName])?
    '{'
    (state+=State)*
    '}';

State:
    type=StateType name=Identifier
    '{'
    (element+=Element)*
    '}';
    
Element:
    Transition | State
;

Transition:
    event=Event guard=Guard action=Action ('=>'|'goto') (=> state=[State|Identifier])
    ;

Value:
    (=> id=[Statemachine|Identifier] '.' ref=[cls::Operation|ID]) | value=CompositeString
;

Event:
   {Event} (=> 'on'? event=Value)?
;

Guard:
    {Guard} (=> 'if' guard=Value)?
;

Action:
   {Action} (=> 'do' action=Value)?
;

CompositeString returns ecore::EString:
    ID | CONDITION
;

Import:
    'import' importURI=STRING;

Identifier returns ecore::EString:
    => ID | STRING
;

enum StateType:
    NONE='state' | INITIAL='initial' | FINAL='final';

QualifiedName:
    ID ('.' ID)*;
    
terminal CONDITION    : '(' (!('('|')'|'\n'|'\r'|'\t'))* ')' //FIXME: "(a && (abc))" -> cant use ')'
;
